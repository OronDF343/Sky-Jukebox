<Window x:Class="SkyJukebox.PlaylistEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:wpf="clr-namespace:SkyJukebox.Lib.Wpf;assembly=SkyJukebox.Lib"
        xmlns:skyJukebox="clr-namespace:SkyJukebox"
        xmlns:treeBrowser="clr-namespace:SkyJukebox.Lib.Wpf.TreeBrowser;assembly=SkyJukebox.Lib"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        x:Name="PlaylistEditorWindow"
        Title="Playlist Editor - Sky Jukebox" Height="400" Width="600" Icon="tg32i.ico" Closed="Window_Closed" Closing="Window_Closing">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Menu IsMainMenu="True" Grid.ColumnSpan="2" Background="Transparent">
            <MenuItem Header="_File">
                <MenuItem Header="_New Playlist" Click="NewPlaylist_Click"/>
                <MenuItem Header="_Open Playlist" Click="OpenPlaylist_Click"/>
                <MenuItem Header="_Save Playlist" Click="SavePlaylist_Click"/>
                <MenuItem Header="Save Playlist _As..." Click="SavePlaylistAs_Click"/>
                <Separator/>
                <MenuItem Header="Show Mini_Player" x:Name="ShowMiniPlayerMenuItem" IsCheckable="True" Click="ShowMiniPlayer_Click"/>
                <MenuItem Header="Hide _This Window" Click="HideThisWindow_Click"/>
                <MenuItem Header="_Hide All Windows" Click="HideAllWindows_Click"/>
                <Separator/>
                <MenuItem Header="_Exit" Click="Exit_Click"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Add Files" Click="AddFiles_Click"/>
                <MenuItem Header="Add _Folder" Click="AddFolder_Click"/>
                <MenuItem Header="Add Files From Playlist" Click="AddPlaylist_Click"/>
                <Separator/>
                <MenuItem Header="Move To _Top" Click="MoveToTop_Click"/>
                <MenuItem Header="Move To _Bottom" Click="MoveToBottom_Click"/>
                <MenuItem Header="Move _Up" Click="MoveUp_Click"/>
                <MenuItem Header="Move _Down" Click="MoveDown_Click"/>
                <Separator/>
                <MenuItem Header="_Remove Selected" Click="RemoveSelected_Click"/>
                <MenuItem Header="Remove A_ll" Click="RemoveAll_Click"/>
                <Separator/>
                <MenuItem Header="_Sort Playlist">
                    <MenuItem Header="Reverse Order" x:Name="ReverseOrderMenuItem" IsCheckable="True" IsChecked="False"/>
                    <MenuItem Header="By _File Name" Click="SortBy_Click"/>
                    <MenuItem Header="By _Title" Click="SortBy_Click"/>
                    <MenuItem Header="By _Performers" Click="SortBy_Click"/>
                    <MenuItem Header="By Album _Artists" Click="SortBy_Click"/>
                    <MenuItem Header="By A_lbum" Click="SortBy_Click"/>
                    <MenuItem Header="By Track _Number" Click="SortBy_Click"/>
                    <MenuItem Header="By _Genre" Click="SortBy_Click"/>
                    <MenuItem Header="By _Year" Click="SortBy_Click"/>
                    <MenuItem Header="By _Duration" Click="SortBy_Click"/>
                    <MenuItem Header="By _Codec" Click="SortBy_Click"/>
                    <MenuItem Header="By _Bitrate" Click="SortBy_Click"/>
                </MenuItem>
                <MenuItem Header="_Merge Playlists..."/>
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="N_o." IsCheckable="True" x:Name="ShowNumber" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=ColumnVisibilitySettings[Number].Value}"/>
                <MenuItem Header="_File Name" IsCheckable="True" x:Name="ShowFileName" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=ColumnVisibilitySettings[FileName].Value}"/>
                <MenuItem Header="_Title" IsCheckable="True" x:Name="ShowTitle" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=ColumnVisibilitySettings[Title].Value}"/>
                <MenuItem Header="_Performers" IsCheckable="True" x:Name="ShowPerformers" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=ColumnVisibilitySettings[Performers].Value}"/>
                <MenuItem Header="Album _Artists" IsCheckable="True" x:Name="ShowAlbumArtists" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=ColumnVisibilitySettings[AlbumArtists].Value}"/>
                <MenuItem Header="A_lbum" IsCheckable="True" x:Name="ShowAlbum" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=ColumnVisibilitySettings[Album].Value}"/>
                <MenuItem Header="Track _Number" IsCheckable="True" x:Name="ShowTrackNumber" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=ColumnVisibilitySettings[TrackNumber].Value}"/>
                <MenuItem Header="_Genre" IsCheckable="True" x:Name="ShowGenre" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=ColumnVisibilitySettings[Genre].Value}"/>
                <MenuItem Header="_Year" IsCheckable="True" x:Name="ShowYear" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=ColumnVisibilitySettings[Year].Value}"/>
                <MenuItem Header="_Duration" IsCheckable="True" x:Name="ShowDuration" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=ColumnVisibilitySettings[Duration].Value}"/>
                <MenuItem Header="_Codec" IsCheckable="True" x:Name="ShowCodec" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=ColumnVisibilitySettings[Codec].Value}"/>
                <MenuItem Header="_Bitrate" IsCheckable="True" x:Name="ShowBitrate" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=ColumnVisibilitySettings[Bitrate].Value}"/>
            </MenuItem>
            <MenuItem Header="_Playback">
                <MenuItem Click="PlayPauseResume_Click">
                    <MenuItem.Style>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="Play"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=PlaylistEditorWindow, Path=PlaybackManagerInstance.CurrentState}" Value="Playing">
                                    <Setter Property="Header" Value="Pause"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=PlaylistEditorWindow, Path=PlaybackManagerInstance.CurrentState}" Value="Paused">
                                    <Setter Property="Header" Value="Resume"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <MenuItem Header="_Stop" Click="Stop_Click"/>
                <MenuItem Header="Pr_evious" Click="Previous_Click"/>
                <MenuItem Header="_Next" Click="Next_Click"/>
                <Separator/>
                <MenuItem Header="S_huffle" IsCheckable="True" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=PlaybackManagerInstance.Shuffle}"/>
                <MenuItem Header="_Loop Type">
                    <MenuItem Header="_None" IsCheckable="True" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=IsLoopTypeNone}" wpf:MenuItemGroupManager.GroupName="LoopTypes"/>
                    <MenuItem Header="_Single" IsCheckable="True" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=IsLoopTypeSingle}" wpf:MenuItemGroupManager.GroupName="LoopTypes"/>
                    <MenuItem Header="_All" IsCheckable="True" IsChecked="{Binding ElementName=PlaylistEditorWindow, Path=IsLoopTypeAll}" wpf:MenuItemGroupManager.GroupName="LoopTypes"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="_Settings" Click="Settings_Click"/>
                <MenuItem Header="Media _Encoder"/>
                <MenuItem Header="_Tag Editor"/>
                <MenuItem Header="Advanced _Debug Stuff"/>
            </MenuItem>
            <MenuItem Header="Plu_gins">
                <MenuItem Header="_Configure..."/>
                <Separator/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="User _Guide"/>
                <MenuItem Header="_About" Click="About_Click"/>
                <MenuItem Header="Check for _Update"/>
            </MenuItem>
        </Menu>
        <ToolBarTray Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Background="Transparent">
            <ToolBar HorizontalAlignment="Left" VerticalAlignment="Top" IsManipulationEnabled="True" Band="0">
                <Button ToolTip="New Playlist" Click="NewPlaylist_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[new24].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Button ToolTip="Open Playlist" Click="OpenPlaylist_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[open24].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Button ToolTip="Save Playlist" Click="SavePlaylist_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[save24].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Button ToolTip="Save Playlist As..." Click="SavePlaylistAs_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[save24as].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Separator/>
                <Separator/>
                <Button ToolTip="Add Files" Click="AddFiles_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[add24file].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Button ToolTip="Add Folder" Click="AddFolder_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[add24folder].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Button ToolTip="Add Files from a Playlist" Click="AddPlaylist_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[playlist24].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Separator/>
                <Separator/>
                <Button ToolTip="Remove Selected" Click="RemoveSelected_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[remove24file].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Button ToolTip="Remove All" Click="RemoveAll_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[remove24all].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Separator/>
                <Separator/>
                <Button ToolTip="Move to Top" Click="MoveToTop_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[move24top].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Button ToolTip="Move Up" Click="MoveUp_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[move24up].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Button ToolTip="Move Down" Click="MoveDown_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[move24down].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Button ToolTip="Move to Bottom" Click="MoveToBottom_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[move24bottom].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Separator/>
                <Separator/>
                <Button ToolTip="Sorting Direction" Click="SortDirection_Click">
                    <Image>
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[sort24].ImageSource}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=ReverseOrderMenuItem, Path=IsChecked}" Value="True">
                                        <Setter Property="Source" Value="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[sort24reverse].ImageSource}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
            </ToolBar>
            <ToolBar HorizontalAlignment="Left" VerticalAlignment="Top" IsManipulationEnabled="True" Band="1">
                <Button ToolTip="Previous" Click="Previous_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[previous24].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Button Click="PlayPauseResume_Click">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="ToolTip" Value="Play"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=PlaylistEditorWindow, Path=PlaybackManagerInstance.CurrentState}" Value="Playing">
                                    <Setter Property="ToolTip" Value="Pause"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=PlaylistEditorWindow, Path=PlaybackManagerInstance.CurrentState}" Value="Paused">
                                    <Setter Property="ToolTip" Value="Resume"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[play24].ImageSource}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=PlaylistEditorWindow, Path=PlaybackManagerInstance.CurrentState}" Value="Playing">
                                        <Setter Property="Source" Value="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[pause24].ImageSource}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <Button ToolTip="Next" Click="Next_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[next24].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Button ToolTip="Stop" Click="Stop_Click">
                    <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[stop24].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
                </Button>
                <Separator/>
                <Separator/>
                <Button ToolTip="Shuffle" Click="Shuffle_OnClick">
                    <Image MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[shuffle24off].ImageSource}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=PlaylistEditorWindow, Path=PlaybackManagerInstance.Shuffle}" Value="True">
                                        <Setter Property="Source" Value="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[shuffle24].ImageSource}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <Button ToolTip="Loop" Click="Loop_OnClick">
                    <Image MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[loop24none].ImageSource}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=PlaylistEditorWindow, Path=PlaybackManagerInstance.LoopType}" Value="Single">
                                        <Setter Property="Source" Value="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[loop24single].ImageSource}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=PlaylistEditorWindow, Path=PlaybackManagerInstance.LoopType}" Value="All">
                                        <Setter Property="Source" Value="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[loop24all].ImageSource}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <Separator/>
                <Separator/>
                <Button ToolTip="Volume (click to mute)" Click="Volume_Click">
                    <Image>
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[volume24].ImageSource}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=PlaylistEditorWindow, Path=PlaybackManagerInstance.Volume, Converter={StaticResource VolumeConverter}}" Value="0">
                                        <Setter Property="Source" Value="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[mute24].ImageSource}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <xctk:IntegerUpDown VerticalAlignment="Center" Increment="1" Minimum="0" Maximum="100" Value="{Binding ElementName=PlaylistEditorWindow, Path=PlaybackManagerInstance.Volume, Converter={StaticResource VolumeConverter}}"/>
            </ToolBar>
        </ToolBarTray>
        <GridSplitter Grid.Row="3" Grid.RowSpan="2" Grid.Column="1" IsManipulationEnabled="True" ResizeDirection="Columns" ResizeBehavior="PreviousAndCurrent" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="5" ShowsPreview="True" Background="Transparent"/>
        <ListView x:Name="PlaylistView" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ScrollViewer.CanContentScroll="True"  ItemsSource="{Binding ElementName=PlaylistEditorWindow, Path=Playlist}" Grid.Row="3" Grid.RowSpan="2" Grid.Column="1" TargetUpdated="PlaylistView_OnTargetUpdated" MouseDoubleClick="PlaylistView_OnMouseDoubleClick" Margin="5,0,0,0" AllowDrop="True" DragEnter="PlaylistView_OnDragEnter" Drop="PlaylistView_OnDrop">
            <ListView.Resources>
                <skyJukebox:IndexCompareConverter x:Key="IndexCompareConverter"/>
                <skyJukebox:OrdinalIndexConverter x:Key="OrdinalIndexConverter"/>
            </ListView.Resources>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Move To _Top" Click="MoveToTop_Click"/>
                    <MenuItem Header="Move To _Bottom" Click="MoveToBottom_Click"/>
                    <MenuItem Header="Move _Up" Click="MoveUp_Click"/>
                    <MenuItem Header="Move _Down" Click="MoveDown_Click"/>
                    <Separator/>
                    <MenuItem Header="_Remove Selected" Click="RemoveSelected_Click"/>
                    <MenuItem Header="Remove _All" Click="RemoveAll_Click"/>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Style.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource IndexCompareConverter}">
                                    <Binding />
                                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type ListView}}" Path="ItemsSource"/>
                                    <Binding ElementName="PlaylistEditorWindow" Path="PlaybackManagerInstance.AbsoluteNowPlayingId"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="FontWeight" Value="Bold" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="N_o." wpf:GridViewColumnVisibilityManager.IsVisible="{Binding ElementName=ShowNumber, Path=IsChecked}" Width="30">
                        <GridViewColumn.DisplayMemberBinding>
                            <MultiBinding Converter="{StaticResource OrdinalIndexConverter}">
                                <Binding />
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type ListView}}" Path="ItemsSource"/>
                            </MultiBinding>
                        </GridViewColumn.DisplayMemberBinding>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding FileName, FallbackValue=[Unknown], Mode=OneTime}" wpf:GridViewColumnVisibilityManager.IsVisible="{Binding ElementName=ShowFileName, Path=IsChecked}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="SortBy_Click">_File Name</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Tag.Title, FallbackValue=[Unknown], Mode=OneTime}" wpf:GridViewColumnVisibilityManager.IsVisible="{Binding ElementName=ShowTitle, Path=IsChecked}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="SortBy_Click">_Title</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Tag.JoinedPerformers, FallbackValue=[Unknown], Mode=OneTime}" wpf:GridViewColumnVisibilityManager.IsVisible="{Binding ElementName=ShowPerformers, Path=IsChecked}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="SortBy_Click">_Performers</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Tag.JoinedAlbumArtists, FallbackValue=[Unknown], Mode=OneTime}" wpf:GridViewColumnVisibilityManager.IsVisible="{Binding ElementName=ShowAlbumArtists, Path=IsChecked}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="SortBy_Click">Album _Artists</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Tag.Album, FallbackValue=[Unknown], Mode=OneTime}" wpf:GridViewColumnVisibilityManager.IsVisible="{Binding ElementName=ShowAlbum, Path=IsChecked}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="SortBy_Click">A_lbum</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Tag.Track, FallbackValue=[Unknown], Mode=OneTime}" wpf:GridViewColumnVisibilityManager.IsVisible="{Binding ElementName=ShowTrackNumber, Path=IsChecked}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="SortBy_Click">Track _Number</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Tag.JoinedGenres, FallbackValue=[Unknown], Mode=OneTime}" wpf:GridViewColumnVisibilityManager.IsVisible="{Binding ElementName=ShowGenre, Path=IsChecked}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="SortBy_Click">_Genre</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Tag.Year, FallbackValue=[Unknown], Mode=OneTime}" wpf:GridViewColumnVisibilityManager.IsVisible="{Binding ElementName=ShowYear, Path=IsChecked}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="SortBy_Click">_Year</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Duration, FallbackValue=[Unknown], Mode=OneTime}" wpf:GridViewColumnVisibilityManager.IsVisible="{Binding ElementName=ShowDuration, Path=IsChecked}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="SortBy_Click">_Duration</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Extension, FallbackValue=[Unknown], Mode=OneTime}" wpf:GridViewColumnVisibilityManager.IsVisible="{Binding ElementName=ShowCodec, Path=IsChecked}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="SortBy_Click">_Codec</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Bitrate, FallbackValue=[Unknown], Mode=OneTime}" wpf:GridViewColumnVisibilityManager.IsVisible="{Binding ElementName=ShowBitrate, Path=IsChecked}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="SortBy_Click">_Bitrate</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <Grid Grid.Row="3" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button ToolTip="Refresh Browser" Click="RefreshTreeBrowser_OnClick" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[refresh24].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
            </Button>
            <Button Grid.Column="1" ToolTip="Clear Selection" Click="DeselectTreeBrowser_OnClick" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[remove24all].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
            </Button>
            <Button Grid.Column="2" ToolTip="Add to Playlist" Click="AddFromTreeBrowser_OnClick" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                <Image Source="{Binding ElementName=PlaylistEditorWindow, Path=IconManagerInstance[add24right].ImageSource}" MinHeight="24" MinWidth="24" MaxHeight="24" MaxWidth="24"/>
            </Button>
        </Grid>
        <treeBrowser:FileTreeBrowser x:Name="TreeBrowser" Grid.Row="4" Grid.Column="0" ScrollViewer.HorizontalScrollBarVisibility="Visible" FilterAction="Whitelist">
            <treeBrowser:FileTreeBrowser.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Add selected items" Click="AddFromTreeBrowser_OnClick"/>
                </ContextMenu>
            </treeBrowser:FileTreeBrowser.ContextMenu>
        </treeBrowser:FileTreeBrowser>
        <Image x:Name="SpinningGear" Grid.Row="0" Grid.RowSpan="5" Grid.Column="0" Grid.ColumnSpan="2" RenderTransformOrigin="0.5, 0.5" Source="{Binding ElementName=PlaylistEditorWindow, Path=Icon}" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Hidden">
            <Image.RenderTransform>
                <RotateTransform />
            </Image.RenderTransform>
            <Image.Style>
                <Style TargetType="Image">
                    <Style.Triggers>
                        <Trigger Property="Visibility" Value="Visible">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="Spin">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" To="-360" Duration="0:0:1" RepeatBehavior="Forever"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <PauseStoryboard BeginStoryboardName="Spin"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
    </Grid>
</Window>
