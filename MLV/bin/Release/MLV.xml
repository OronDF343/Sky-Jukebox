<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MLV</name>
    </assembly>
    <members>
        <member name="T:MLV.ManagedListView">
            <summary>
            Advanced ListView control.
            </summary>
        </member>
        <member name="M:MLV.ManagedListView.#ctor">
            <summary>
            Advanced ListView control.
            </summary>
        </member>
        <member name="M:MLV.ManagedListView.GetItemAtCursorPoint">
            <summary>
            Retrieve item at current cursor point
            </summary>
            <returns>The found item</returns>
        </member>
        <member name="M:MLV.ManagedListView.GetItemAtPoint(System.Drawing.Point)">
            <summary>
            Retrieve item at point
            </summary>
            <param name="point">The point</param>
            <returns>The found item</returns>
        </member>
        <member name="M:MLV.ManagedListView.GetItemIndexAtCursorPoint">
            <summary>
            Retrieve item index at current cursor point
            </summary>
            <returns>The found item index</returns>
        </member>
        <member name="M:MLV.ManagedListView.GetItemIndexAtPoint(System.Drawing.Point)">
            <summary>
            Retrieve item index at point
            </summary>
            <param name="point">The point</param>
            <returns>The found item index</returns>
        </member>
        <member name="M:MLV.ManagedListView.ScrollToItem(System.Int32)">
            <summary>
            Scroll view port into item
            </summary>
            <param name="itemIndex">The item index</param>
        </member>
        <member name="M:MLV.ManagedListView.ScrollToItem(MLV.ManagedListViewItem)">
            <summary>
            Scroll view port into item
            </summary>
            <param name="item">The item to scroll into</param>
        </member>
        <member name="M:MLV.ManagedListView.OnFontChanged(System.EventArgs)">
            <summary>
            Rises the font changed event
            </summary>
            <param name="e"><see cref="T:System.EventArgs"/></param>
        </member>
        <member name="F:MLV.ManagedListView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:MLV.ManagedListView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MLV.ManagedListView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ViewMode">
            <summary>
            Get or set the viewmode.
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.Columns">
            <summary>
            Get or set the column collection.
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.Items">
            <summary>
            Get or set the items collection.
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.AllowItemsDragAndDrop">
            <summary>
            Get or set if selected items can be draged and droped
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.AllowColumnsReorder">
            <summary>
            Allow columns reorder ? after a column reordered, the index of that column within the columns collection get changed
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ChangeColumnSortModeWhenClick">
            <summary>
            If enabled, the sort mode of a column get changed when the user clicks that column
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ThunmbnailsHeight">
            <summary>
            The thunmbnail height. Work only for thunmbnails view mode.
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ThunmbnailsWidth">
            <summary>
            The thunmbnail width. Work only for thumbnails view mode.
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.WheelScrollSpeed">
            <summary>
            The speed of the scroll when using mouse wheel. Default value is 20.
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.DrawHighlight">
            <summary>
            If enabled, the item get highlighted when the mouse over it
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ImagesList">
            <summary>
            The images list that will be used for draw
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.SelectedItems">
            <summary>
            Get the selected items collection
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.AllowDrop">
            <summary>
            Get or set if this control can accept dropped data
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.Font">
            <summary>
            Get or set the font of this control
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.DrawColumn">
            <summary>
            Rised when the control need to draw a column
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.DrawItem">
            <summary>
            Rised when the control need to draw an item. The item information will be sent along with this event args. Please note that this event rised only with Thumbnails View Mode.
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.DrawSubItem">
            <summary>
            Rised when the control need to draw a sub item
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.MouseOverSubItem">
            <summary>
            Rised when the mouse is over a sub item
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.SelectedIndexChanged">
            <summary>
            Rised when the item selection changed
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ColumnClicked">
            <summary>
            Rised when the user clicks a column
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.EnterPressed">
            <summary>
            Rised when the user pressed the return key
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ItemDoubleClick">
            <summary>
            Rised when the user double click on item
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.SwitchToColumnsContextMenu">
            <summary>
            Rised when the control needs to shwitch to the columns context menu
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.SwitchToNormalContextMenu">
            <summary>
            Rised when the control needs to shwitch to the normal context menu
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.AfterColumnResize">
            <summary>
            Rised when the user finished resizing a column
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ItemsDrag">
            <summary>
            Rised when the user draged item(s)
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ViewModeChanged">
            <summary>
            Rised when the user changed the view mode
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewPanel">
            <summary>
            The Advanced ListView panel. This control should be used only on ManagedListView user control.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewPanel.#ctor">
            <summary>
            The Advanced ListView panel.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.viewMode">
            <summary>
            The view mode
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.columns">
            <summary>
            The columns collection
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.items">
            <summary>
            The items collection
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.ImagesList">
            <summary>
            The images list
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.HscrollOffset">
            <summary>
            The horisontal scroll offset
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.VscrollOffset">
            <summary>
            The vertical scroll offset value
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.AllowItemsDragAndDrop">
            <summary>
            Indecate whether the user can drag and drop items
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.AllowColumnsReorder">
            <summary>
            Indecate whether the user can reorder the columns.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.ChangeColumnSortModeWhenClick">
            <summary>
            Indecate whether the sort mode value of a column get changed when the user click that column.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.ThumbnailsHeight">
            <summary>
            The thumbnail height value
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.ThumbnailsWidth">
            <summary>
            The thumbnails width value
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.itemTextHeight">
            <summary>
            The item text height
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.DrawHighlight">
            <summary>
            Indecate whether to draw item highlight when the mouse over that item.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.itemHeight">
            <summary>
            The item height
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewPanel.GetItemIndexAtCursorPoint">
            <summary>
            Get item index at cursor point
            </summary>
            <returns>The item index if found otherwise -1</returns>
        </member>
        <member name="M:MLV.ManagedListViewPanel.GetItemIndexAtPoint(System.Drawing.Point)">
            <summary>
            Get item index at point
            </summary>
            <param name="location">The location within the viewport</param>
            <returns>The item index if found otherwise -1</returns>
        </member>
        <member name="M:MLV.ManagedListViewPanel.CalculateColumnsSize">
            <summary>
            Calculate all columns width
            </summary>
            <returns>The columns width (all columns)</returns>
        </member>
        <member name="M:MLV.ManagedListViewPanel.CalculateItemsSize">
            <summary>
            Calculate all items size (height). Works with Details view mode only
            </summary>
            <returns>The height of all items</returns>
        </member>
        <member name="M:MLV.ManagedListViewPanel.GetItemHeight">
            <summary>
            Get the height of one item. Works with Details view mode only
            </summary>
            <returns></returns>
        </member>
        <member name="M:MLV.ManagedListViewPanel.GetVscrollValueForItem(System.Int32)">
            <summary>
            Get vertical scroll value for item
            </summary>
            <param name="itemIndex">The item index</param>
            <returns>The vertical scroll value</returns>
        </member>
        <member name="M:MLV.ManagedListViewPanel.CalculateSizeOfItemsAsThumbnails">
            <summary>
            Calculate all items size (height). Works with Thumbnails view mode only
            </summary>
            <returns></returns>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnKeyDownRised(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Rise the key own event
            </summary>
            <param name="e">The key event arguments</param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnRefreshScrollBars">
            <summary>
            Rise the refresh scroll bars event
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseLeaveRise">
            <summary>
            Rise the mouse leave event
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Rise the paint event
            </summary>
            <param name="pe"><see cref="T:System.Windows.Forms.PaintEventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Rise the mouse down event
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Rise the mouse up event
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Rise the mouse move event
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Rise the mouse click event
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Rise the mouse wheel event
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Rise the mouse double click event
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseLeave(System.EventArgs)">
            <summary>
            Rise the mouse leave event
            </summary>
            <param name="e"><see cref="T:System.EventArgs"/></param>
        </member>
        <member name="F:MLV.ManagedListViewPanel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewPanel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewPanel.SelectedItems">
            <summary>
            The selected items collection
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.RefreshValues">
            <summary>
            Rised when values refresh required.
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.ClearScrolls">
            <summary>
            Rised when the control requst a scroll values rest
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.AdvanceVScrollRequest">
            <summary>
            Rised when the control requests an advance for vertical scroll value
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.ReverseVScrollRequest">
            <summary>
            Rised when the control requests a reverse for vertical scroll value
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.RefreshScrollBars">
            <summary>
            Rised when the control requests a refresh for scroll bars
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.SelectedIndexChanged">
            <summary>
            Rised when selected items value changed
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.DrawColumn">
            <summary>
            Rised when the control needs to draw column
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.DrawItem">
            <summary>
            Rised when the control needs to draw item
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.DrawSubItem">
            <summary>
            Rised when the control needs to draw subitem
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.MouseOverSubItem">
            <summary>
            Rised when the mouse cursor over a subiem.
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.ColumnClicked">
            <summary>
            Rised when a column get clicked
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.ItemDoubleClick">
            <summary>
            Rised when an item double click occures
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.EnterPressedOverItem">
            <summary>
            Rised when the user presses enter after selecting one item.
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.ShowContextMenuStrip">
            <summary>
            Rised when the control requests to show the context menu strip
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.SwitchToColumnsContextMenu">
            <summary>
            Rised when the control requests to switch into the columns context menu strip
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.SwitchToNormalContextMenu">
            <summary>
            Rised when the control requests to switch into the normal context menu strip
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.AfterColumnResize">
            <summary>
            Rised when a column get resized
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.ItemsDrag">
            <summary>
            Rised when an item get draged
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.ScrollToSelectedItemRequest">
            <summary>
            Rised when the control requests to scroll into given item
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewPanel.Font">
            <summary>
            Get or set the font
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewColumnClickArgs">
            <summary>
            Arguments for column click events
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewColumnClickArgs.#ctor(System.String)">
            <summary>
            Arguments for column click events
            </summary>
            <param name="id">The target column id</param>
        </member>
        <member name="P:MLV.ManagedListViewColumnClickArgs.ColumnID">
            <summary>
            Get the column id
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewColumnDrawArgs">
            <summary>
            Arguments for column draw events
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewColumnDrawArgs.#ctor(System.String,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Arguments for column draw events
            </summary>
            <param name="id">The target column id</param>
            <param name="gr">The graphics class used to draw the column</param>
            <param name="rectangle">The rectangle area of the column in the draw panel</param>
        </member>
        <member name="P:MLV.ManagedListViewColumnDrawArgs.ColumnID">
            <summary>
            Get the column id
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewColumnDrawArgs.ColumnRectangle">
            <summary>
            Get the rectangle area of the column in the draw panel
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewColumnDrawArgs.Graphics">
            <summary>
            Get the graphics class used to draw the column
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewItemDoubleClickArgs">
            <summary>
            Arguments for item double click events
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItemDoubleClickArgs.#ctor(System.Int32)">
            <summary>
            Arguments for item double click events
            </summary>
            <param name="itemIndex">The clicked item index</param>
        </member>
        <member name="P:MLV.ManagedListViewItemDoubleClickArgs.ClickedItemIndex">
            <summary>
            Get the clicked item index
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewItemDrawArgs">
            <summary>
            Arguments for item draw vents
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItemDrawArgs.#ctor(System.Int32)">
            <summary>
            Arguments for item draw vents
            </summary>
            <param name="itemIndex">The target item index</param>
        </member>
        <member name="P:MLV.ManagedListViewItemDrawArgs.TextToDraw">
            <summary>
            Get or set the text to draw 
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewItemDrawArgs.ImageToDraw">
            <summary>
            Get or set the image to draw
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewItemDrawArgs.ItemIndex">
            <summary>
            Get the target item index
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewItemDrawMode">
            <summary>
            The item draw mode.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewItemDrawMode.Text">
            <summary>
            Draw text only. The text will be taken from Text property of item or subitem.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewItemDrawMode.Image">
            <summary>
            Draw image only. The image will be used from ImagesList at given index of ImageIndex property of item or subitem.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewItemDrawMode.TextAndImage">
            <summary>
            Draw both text and image. The text will be taken from Text property of item or subitem, 
            The image will be used from ImagesList at given index of ImageIndex property of item or subitem.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewItemDrawMode.UserDraw">
            <summary>
            Use user resources to draw both text and image. You must use the draw events to draw once this mode chosen.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewItemSelectArgs">
            <summary>
            Arguments for item select events.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItemSelectArgs.#ctor(System.Int32)">
            <summary>
            Arguments for item select events.
            </summary>
            <param name="itemIndex">The target item index</param>
        </member>
        <member name="P:MLV.ManagedListViewItemSelectArgs.ItemIndex">
            <summary>
            The item index.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewMouseOverSubItemArgs">
            <summary>
            Arguments for mouse over subitem events.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewMouseOverSubItemArgs.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            Arguments for mouse over subitem events.
            </summary>
            <param name="itemIndex">The target item index.</param>
            <param name="columnID">The column id which the subitem belong to.</param>
            <param name="mouseX">The mouse x coordinate value in the panel (not the view port).</param>
        </member>
        <member name="P:MLV.ManagedListViewMouseOverSubItemArgs.ColumnID">
            <summary>
            Get the column id which the subitem belong to.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewMouseOverSubItemArgs.ItemIndex">
            <summary>
            Get the parent item index.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewMouseOverSubItemArgs.MouseX">
            <summary>
            The mouse x coordinate value in the panel (not the view port).
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewRatingChangedArgs">
            <summary>
            Argumnets for rating events.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewRatingChangedArgs.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Argumnets for rating events.
            </summary>
            <param name="id">The column id which the subitem belongs to.</param>
            <param name="itemIndex">The parent item index</param>
            <param name="rating">The rating value (0-5)</param>
        </member>
        <member name="P:MLV.ManagedListViewRatingChangedArgs.ColumnID">
            <summary>
            Get the column id which the subitem belongs to.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewRatingChangedArgs.ItemIndex">
            <summary>
            Get The parent item index
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewRatingChangedArgs.Rating">
            <summary>
            Get the rating value (0-5; 0=none rating, 5=top rating or 5 stars)
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewSortMode">
            <summary>
            The sort mode.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewSortMode.AtoZ">
            <summary>
            Sort items A to Z.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewSortMode.ZtoA">
            <summary>
            Sort items Z to A.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewSortMode.None">
            <summary>
            No sort.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewSubItemDrawArgs">
            <summary>
            Arguments for subitem draw events.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewSubItemDrawArgs.#ctor(System.String,System.Int32)">
            <summary>
            Arguments for subitem draw events.
            </summary>
            <param name="id">The column id which this subitem belongs to.</param>
            <param name="itemIndex">The parent item index.</param>
        </member>
        <member name="P:MLV.ManagedListViewSubItemDrawArgs.ColumnID">
            <summary>
            Get the column id which this subitem belongs to.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewSubItemDrawArgs.TextToDraw">
            <summary>
            Get or set the text to draw.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewSubItemDrawArgs.ImageToDraw">
            <summary>
            Get or set the image to draw.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewSubItemDrawArgs.ItemIndex">
            <summary>
            Get the parent item index.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewColumn">
            <summary>
            Advanced ListView column.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewColumn.HeaderText">
            <summary>
            Get or set the header text of this column.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewColumn.SortMode">
            <summary>
            Get or set the sortmode for this column that will be used to sort items that connected to this column using id.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewColumn.ID">
            <summary>
            Get or set the id of this column. Use this to connect subitems to this column.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewColumn.Width">
            <summary>
            Get or set the width of this column.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewItem">
            <summary>
            Advanced ListView item.
            </summary>
        </member>
        <member name="T:MLV.IManagedListViewItem">
            <summary>
            The Advanced ListView item interfaced class.
            </summary>
        </member>
        <member name="M:MLV.IManagedListViewItem.OnMouseOver(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Rises the mouse over event.
            </summary>
            <param name="mouseLocation">The mouse location within the viewport of the parent listview control.</param>
            <param name="charFontSize">The char font size</param>
        </member>
        <member name="M:MLV.IManagedListViewItem.OnMouseClick(System.Drawing.Point,System.Drawing.Size,System.Int32)">
            <summary>
            Rises the mouse click event
            </summary>
            <param name="mouseLocation">The mouse location within the viewport of the parent listview control.</param>
            <param name="charFontSize">The char font size</param>
            <param name="itemIndex">The item index or the part item index if this item is a subitem.</param>
        </member>
        <member name="M:MLV.IManagedListViewItem.OnMouseLeave">
            <summary>
            Rises the mouse leave event
            </summary>
        </member>
        <member name="P:MLV.IManagedListViewItem.Text">
            <summary>
            Get or set the item text.
            </summary>
        </member>
        <member name="P:MLV.IManagedListViewItem.Color">
            <summary>
            Get or set this item text's color.
            </summary>
        </member>
        <member name="P:MLV.IManagedListViewItem.ImageIndex">
            <summary>
            Get or set the image index for this item within the ImagesList collection of the parent control.
            </summary>
        </member>
        <member name="P:MLV.IManagedListViewItem.DrawMode">
            <summary>
            Get or set the draw mode for this item.
            </summary>
        </member>
        <member name="P:MLV.IManagedListViewItem.CustomFontEnabled">
            <summary>
            Get or set if the custom font enabled for this item. Normally the control draw item texts debending on font value 
            of that control, but if this value enabled the control will use the font that specified in CustomFont property 
            of thos item.
            </summary>
        </member>
        <member name="P:MLV.IManagedListViewItem.CustomFont">
            <summary>
            Get or set the custom font which will be used to draw text if this item when the CustomFontEnabled property is true.
            </summary>
        </member>
        <member name="P:MLV.IManagedListViewItem.Tag">
            <summary>
            Get or set the tag for this item.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItem.GetSubItemByID(System.String)">
            <summary>
            Get subitem using column id
            </summary>
            <param name="id">The column id</param>
            <returns>The arget subitem if found otherwise null.</returns>
        </member>
        <member name="M:MLV.ManagedListViewItem.OnMouseLeave">
            <summary>
            Rises the "on mouse leave" event.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewItem.SubItems">
            <summary>
            Get or set the subitems collection.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewItem.Selected">
            <summary>
            Get or set a value indecate whether this item is selected.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewItem.IsSpecialItem">
            <summary>
            Get or set a value indecate whether this item is special. Special items always colered with special color.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewRatingSubItem">
            <summary>
            Advanced ListView rating subitem. This is special subitem can be treated like normal subitem (added to item normaly) but 
            this subitem will be drawn differently. The parent advanced listview control will draw it as 5 stars debending on Rating 
            value, also the control will allow user to change rating using mouse. No text or image will be drawn and no draw event 
            will rise.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewSubItem">
            <summary>
            The Advanced ListView Subitem that can be used in Advanced ListView items.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewSubItem.ColumnID">
            <summary>
            Get or set the column id that this subitem belongs to. This value is important and this subitem will 
            NOT GET DROWN until this value is set correctly. Use the same value of ManagedListViewColumn.ID
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewRatingSubItem.OnMouseClick(System.Drawing.Point,System.Drawing.Size,System.Int32)">
            <summary>
            Rises the mouse click event
            </summary>
            <param name="mouseLocation">The mouse location within the viewport.</param>
            <param name="charFontSize">The default char size debending on parent listview control font.</param>
            <param name="itemIndex">The parent item index.</param>
        </member>
        <member name="M:MLV.ManagedListViewRatingSubItem.OnMouseOver(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Rises the mouse over event
            </summary>
            <param name="mouseLocation">The mouse location within the viewport.</param>
            <param name="charFontSize">The default char size debending on parent listview control font.</param>
        </member>
        <member name="M:MLV.ManagedListViewRatingSubItem.OnRefreshRating(System.Int32,System.Int32)">
            <summary>
            Rises the UpdateRatingRequest event.
            </summary>
            <param name="itemIndex">The parent item index</param>
            <param name="itemHeight">The item height value. Should be calculated in the parent control automaticly debending on draw status.</param>
        </member>
        <member name="E:MLV.ManagedListViewRatingSubItem.RatingChanged">
            <summary>
            Rised when the user changes the rating via clicking on this subitem.
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewRatingSubItem.UpdateRatingRequest">
            <summary>
            Rised when this sub item need to refresh rating (to get the original value of rating)
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewRatingSubItem.Rating">
            <summary>
            Get or set the rating value. (0-5, 0=none rating, 5=top rating or 5 stars)
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewRatingSubItem.OverRating">
            <summary>
            Get or set the overrating value (0-5, 0=none rating, 5=top rating or 5 stars). This value changed debending on the mouse 
            cursor overing the subitem and has no effect on original rating value.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewRatingSubItem.DrawOverImage">
            <summary>
            Get or set if should draw the overrating image. The overimage draw when the overrating value changed debending on the mouse 
            cursor overing the subitem and has no effect on original rating value.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewViewMode">
            <summary>
            The listview mode.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewViewMode.Details">
            <summary>
            Draw items in details mode. This will draw columns and subitems.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewViewMode.Thumbnails">
            <summary>
            Draw items in thumbnails mode. This will draw items only.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewColumnsCollection">
            <summary>
            The columns collection, can rise events when columns added, removed ... etc
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.Add(MLV.ManagedListViewColumn)">
            <summary>
            Add column to this collection
            </summary>
            <param name="item"><see cref="T:MLV.ManagedListViewColumn"/></param>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.Insert(System.Int32,MLV.ManagedListViewColumn)">
            <summary>
            Insert column to this collection
            </summary>
            <param name="index">The index to insert at</param>
            <param name="item"><see cref="T:MLV.ManagedListViewColumn"/></param>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.Clear">
            <summary>
            Clear this collection
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.Contains(MLV.ManagedListViewColumn)">
            <summary>
            Get value indecate whether a column exists in this collection.
            </summary>
            <param name="item"><see cref="T:MLV.ManagedListViewColumn"/></param>
            <returns>True if given column exists in this collection otherwise false</returns>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.CopyTo(MLV.ManagedListViewColumn[],System.Int32)">
            <summary>
            Copy this collection to an array.
            </summary>
            <param name="array">The target array to copy into</param>
            <param name="arrayIndex">The index within the target array to start with</param>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.Remove(MLV.ManagedListViewColumn)">
            <summary>
            Remove a column from this collection
            </summary>
            <param name="item">The <see cref="T:MLV.ManagedListViewColumn"/> to remove</param>
            <returns>True if column removed successfuly otherwise false.</returns>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.GetEnumerator">
            <summary>
            Get Enumerator
            </summary>
            <returns>The enumerator of this collection</returns>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.GetColumnByID(System.String)">
            <summary>
            Get column using given id
            </summary>
            <param name="id">The target column id</param>
            <returns>The column if found otherwise null.</returns>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.Sort">
            <summary>
            Sort the columns collection
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.Sort(System.Collections.Generic.IComparer{MLV.ManagedListViewColumn})">
            <summary>
            Sort the columns collection using comparer
            </summary>
            <param name="comparer">The comparer to use in compare operation</param>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{MLV.ManagedListViewColumn})">
            <summary>
            Sort the columns collection using comparer
            </summary>
            <param name="index">The start index to start with</param>
            <param name="count">The count of columns</param>
            <param name="comparer">The comparer to use in compare operation</param>
        </member>
        <member name="E:MLV.ManagedListViewColumnsCollection.ColumnAdded">
            <summary>
            Rised when a column added to the collection.
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewColumnsCollection.ColumnRemoved">
            <summary>
            Rised when a column remove from the collection.
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewColumnsCollection.CollectionClear">
            <summary>
            Rised when the collection get cleared.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewColumnsCollection.Item(System.Int32)">
            <summary>
            The columns collection.
            </summary>
            <param name="index">The column index within this collection.</param>
            <returns><see cref="T:MLV.ManagedListViewColumn"/></returns>
        </member>
        <member name="P:MLV.ManagedListViewColumnsCollection.Count">
            <summary>
            Get columns count in this collection
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewColumnsCollection.IsReadOnly">
            <summary>
            Get a value indecate whether this collection is read only.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewItemsCollection">
            <summary>
            Advanced ListView Items Collection, can rise events when items added, removed ... etc
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Add(MLV.ManagedListViewItem)">
            <summary>
            Add item to the collection
            </summary>
            <param name="item"><see cref="T:MLV.ManagedListViewItem"/></param>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Clear">
            <summary>
            Clear this collection
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Contains(MLV.ManagedListViewItem)">
            <summary>
            Get whether an item exist in this collection
            </summary>
            <param name="item"><see cref="T:MLV.ManagedListViewItem"/></param>
            <returns>True if the item exists otherwise false</returns>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.CopyTo(MLV.ManagedListViewItem[],System.Int32)">
            <summary>
            Copy this collection to an array
            </summary>
            <param name="array">The target array to copy into</param>
            <param name="arrayIndex">The index within the target array to start with</param>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Remove(MLV.ManagedListViewItem)">
            <summary>
            Remove an item from this collection
            </summary>
            <param name="item"><see cref="T:MLV.ManagedListViewItem"/> to remove</param>
            <returns>True if removed successfuly otherwise false.</returns>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.IndexOf(MLV.ManagedListViewItem)">
            <summary>
            Get the index of given item within this collection
            </summary>
            <param name="item">The item to get index of</param>
            <returns>The index of given item if found otherwise false</returns>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get Enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Insert(System.Int32,MLV.ManagedListViewItem)">
            <summary>
            Insert item to this collection at given index
            </summary>
            <param name="index">The index to insert the item at</param>
            <param name="item">The item to insert</param>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Sort">
            <summary>
            Sort the items collection
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Sort(System.Comparison{MLV.ManagedListViewItem})">
            <summary>
            Sort the items collection using a Comparison
            </summary>
            <param name="comparer">The Comparison to use in compare operation</param>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Sort(System.Collections.Generic.IComparer{MLV.ManagedListViewItem})">
            <summary>
            Sort the items collection using Comparer
            </summary>
            <param name="comparer">The Comparer to use in compare operation</param>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{MLV.ManagedListViewItem})">
            <summary>
            Sort the items collection using comparer
            </summary>
            <param name="index">The start index to start with</param>
            <param name="count">The count of items</param>
            <param name="comparer">The comparer to use in compare operation</param>
        </member>
        <member name="E:MLV.ManagedListViewItemsCollection.ItemAdded">
            <summary>
            Rised whan an item added to the collection
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewItemsCollection.ItemRemoved">
            <summary>
            Rised when an item removed from the collection
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewItemsCollection.CollectionClear">
            <summary>
            Rised when the collection get cleared
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewItemsCollection.Item(System.Int32)">
            <summary>
            Advanced ListView Items Collection
            </summary>
            <param name="index">The item index</param>
            <returns><see cref="T:MLV.ManagedListViewItem"/></returns>
        </member>
        <member name="P:MLV.ManagedListViewItemsCollection.Count">
            <summary>
            Get the items count in this collecion
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewItemsCollection.IsReadOnly">
            <summary>
            Get whether this collection is read only
            </summary>
        </member>
        <member name="T:MLV.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.noneRating">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.SortAlpha">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.SortZ">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.star_1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.star_2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.star_3">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.star_4">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.star_5">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
    </members>
</doc>
